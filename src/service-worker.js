/* eslint-disable no-restricted-globals */

// This service worker can be customized!
// See https://developers.google.com/web/tools/workbox/modules
// for the list of available Workbox modules, or add any other
// code you'd like.
// You can also remove this file if you'd prefer not to use a
// service worker, and the Workbox build step will be skipped.

import { clientsClaim } from 'workbox-core';
import { precacheAndRoute } from 'workbox-precaching';

clientsClaim();

// Precache all of the assets generated by your build process.
// Their URLs are injected into the manifest variable below.
// This variable must be present somewhere in your service worker file,
// even if you decide not to use precaching. See https://cra.link/PWA
precacheAndRoute(self.__WB_MANIFEST);

const CACHE_STATIC = 'cache-static-v1';
const CACHE_IMMUTABLE = 'cache-inmutable-v1';

const APP_SHELL = [
  '/',
  '/index.html',
  '/ayi_favicon.png'
];

const APP_SHELL_IMMUTABLE = [
  'https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@200&display=swap',
];

self.addEventListener('install', event => {
  const promise1 = caches.open(CACHE_STATIC)
    .then(cache => {
      cache.addAll(APP_SHELL);
    });
  
  const promise2 = caches.open(CACHE_IMMUTABLE)
    .then(cache => {
      cache.addAll(APP_SHELL_IMMUTABLE);
    });

  event.waitUntil(Promise.all([promise1, promise2]));
});

self.addEventListener('activate', event => {
  const response = caches.keys()
    .then(keys => {
      keys.forEach(key => {
        if(key != CACHE_STATIC && key.includes('static')) {
          return caches.delete(key);
        }
      });
    });

  event.waitUntil(response);
});